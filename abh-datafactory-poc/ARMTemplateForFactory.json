{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "abh-datafactory-poc"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabaseSink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseSink'"
		},
		"DataFactoryLinkedServicesSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataFactoryLinkedServicesSQL'"
		},
		"Dynamics 365 ipt_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Dynamics 365 ipt'"
		},
		"Dynamics 365 ipt_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "arman.behzadirad@ipt.ch"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Contact Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transfer_All_Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transfer_All_Data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"ShippingTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_BOID",
											"physicalType": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Contact_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Contact_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"concurrency": 1,
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Transfer_All_Data')]",
				"[concat(variables('factoryId'), '/datasets/Contact_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Coverage Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Coverage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Coverage_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Coverage_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Coverage_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contact_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFactoryLinkedServicesSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Contact_BOID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFactoryLinkedServicesSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Coverage_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseSink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Contact_BOID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Contact2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics_Contact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics 365 ipt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics 365 ipt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ErrorCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Mappe1.csv",
						"container": "errrorcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Shipping_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFactoryLinkedServicesSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Entity",
						"type": "varchar"
					},
					{
						"name": "Status_Process",
						"type": "varchar"
					},
					{
						"name": "ErrorCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Error_Description",
						"type": "varchar"
					},
					{
						"name": "Retry_Count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Priority",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ShippingTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFactoryLinkedServicesSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseSink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseSink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFactoryLinkedServicesSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DataFactoryLinkedServicesSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics 365 ipt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://org992ec074.crm4.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('Dynamics 365 ipt_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Dynamics 365 ipt_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CoverageTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-12-15T13:25:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "TriggerTableContact",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/TriggerTableContact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTableContact')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-12-14T14:36:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTableCoverage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-12-14T14:44:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "TriggerTableContact",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/TriggerTableContact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transfer_All_Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ErrorCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Shipping_Table",
								"type": "DatasetReference"
							},
							"name": "ShippingTable"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tColumn_1\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tEntity as string,\n\t\tStatus_Process as string,\n\t\tErrorCode as integer,\n\t\tError_Description as string,\n\t\tRetry_Count as integer,\n\t\tPriority as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ShippingTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ErrorCSV')]",
				"[concat(variables('factoryId'), '/datasets/Shipping_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WranglingDataFlow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "Shipping_Table",
							"script": "",
							"dataset": {
								"referenceName": "Shipping_Table",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "Coverage_Table",
								"type": "DatasetReference"
							},
							"script": "sink(input(\n\t\tName as string,\n\t\tAddress as string,\n\t\tContact_BOID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared Shipping_Table = let\r\n  AdfDoc = Sql.Database(\"abh-sql-server.database.windows.net\", \"abh-sql-db\"),\r\n  InputTable = AdfDoc{[Schema = \"dbo\", Item = \"ShippingTable\"]}[Data]\r\nin\r\n  InputTable;\r\nshared UserQuery = let\r\n  Source = Shipping_Table\r\nin\r\n  Source;\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Shipping_Table')]",
				"[concat(variables('factoryId'), '/datasets/Coverage_Table')]"
			]
		}
	]
}