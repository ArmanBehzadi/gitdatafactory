{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "abh-datafactory-poc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlFLowSql')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTableSink",
								"type": "DatasetReference"
							},
							"name": "SinkSQL"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						},
						{
							"name": "ChangeColumnNamesToParquetFormat"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAddress as string,\n\t\tContact_BOID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source\nChangeColumnNamesToParquetFormat alterRow(upsertIf(true())) ~> AlterRow1\nSource select(mapColumn(\n\t\tName,\n\t\tAddress,\n\t\tContactBOID = Contact_BOID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChangeColumnNamesToParquetFormat\nAlterRow1 sink(input(\n\t\tName as string,\n\t\tAddress as string,\n\t\tContact_Key as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['Contact_Key'],\n\tformat: 'table',\n\tmapColumn(\n\t\tName,\n\t\tAddress,\n\t\tContact_Key = ContactBOID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkSQL"
				}
			},
			"dependsOn": []
		}
	]
}